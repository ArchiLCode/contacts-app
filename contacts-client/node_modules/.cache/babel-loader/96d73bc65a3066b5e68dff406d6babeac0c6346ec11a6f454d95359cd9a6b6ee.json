{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"Список контактов\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.addContact && $options.addContact(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newContact.name = $event),\n    placeholder: \"Имя\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newContact.name]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newContact.phone = $event),\n    placeholder: \"Телефон\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newContact.phone]]), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Добавить контакт\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.contacts, contact => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: contact._id\n    }, [_createTextVNode(_toDisplayString(contact.name) + \" - \" + _toDisplayString(contact.phone) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteContact(contact._id)\n    }, \"Удалить\", 8 /* PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","addContact","$event","$data","newContact","name","placeholder","required","phone","type","_Fragment","_renderList","contacts","contact","key","_id","_createTextVNode","_toDisplayString","onClick","deleteContact","_hoisted_1"],"sources":["C:\\Users\\Пользователь\\.vscode\\vscode\\contacts-app\\client\\contacts-client\\src\\components\\ContactsList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Список контактов</h1>\r\n\r\n    <form @submit.prevent=\"addContact\">\r\n      <input v-model=\"newContact.name\" placeholder=\"Имя\" required />\r\n      <input v-model=\"newContact.phone\" placeholder=\"Телефон\" required />\r\n      <button type=\"submit\">Добавить контакт</button>\r\n    </form>\r\n\r\n    <ul>\r\n      <li v-for=\"contact in contacts\" :key=\"contact._id\">\r\n        {{ contact.name }} - {{ contact.phone }}\r\n        <button @click=\"deleteContact(contact._id)\">Удалить</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      contacts: [],\r\n      newContact: {\r\n        name: '',\r\n        phone: '',\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchContacts() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/')\r\n        this.contacts = response.data\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n\r\n    async addContact() {\r\n      try {\r\n        const response = await axios.post(\r\n          'http://localhost:5000/',\r\n          this.newContact\r\n        )\r\n        this.contacts.push(response.data)\r\n        this.newContact.name = ''\r\n        this.newContact.phone = ''\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n\r\n    async deleteContact(id) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/${id}`)\r\n        this.contacts = this.contacts.filter((contact) => contact._id !== id)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.fetchContacts()\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Ваши стили */\r\n</style>\r\n"],"mappings":";mBAAA;;uBACEA,mBAAA,CAeM,c,0BAdJC,mBAAA,CAAyB,YAArB,kBAAgB,sBAEpBA,mBAAA,CAIO;IAJAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJjBC,cAAA,KAAAC,IAAA,KAI2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;sBAC/BJ,mBAAA,CAA8D;IALpE,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAKsBC,KAAA,CAAAC,UAAU,CAACC,IAAI,GAAAH,MAAA;IAAEI,WAAW,EAAC,KAAK;IAACC,QAAQ,EAAR;iDAAnCJ,KAAA,CAAAC,UAAU,CAACC,IAAI,E,mBAC/BV,mBAAA,CAAmE;IANzE,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAMsBC,KAAA,CAAAC,UAAU,CAACI,KAAK,GAAAN,MAAA;IAAEI,WAAW,EAAC,SAAS;IAACC,QAAQ,EAAR;iDAAxCJ,KAAA,CAAAC,UAAU,CAACI,KAAK,E,6BAChCb,mBAAA,CAA+C;IAAvCc,IAAI,EAAC;EAAQ,GAAC,kBAAgB,qB,4BAGxCd,mBAAA,CAKK,c,kBAJHD,mBAAA,CAGKgB,SAAA,QAdXC,WAAA,CAW4BR,KAAA,CAAAS,QAAQ,EAAnBC,OAAO;yBAAlBnB,mBAAA,CAGK;MAH4BoB,GAAG,EAAED,OAAO,CAACE;QAXpDC,gBAAA,CAAAC,gBAAA,CAYWJ,OAAO,CAACR,IAAI,IAAG,KAAG,GAAAY,gBAAA,CAAGJ,OAAO,CAACL,KAAK,IAAG,GACxC,iBAAAb,mBAAA,CAA4D;MAAnDuB,OAAK,EAAAhB,MAAA,IAAEF,QAAA,CAAAmB,aAAa,CAACN,OAAO,CAACE,GAAG;OAAG,SAAO,iBAb3DK,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}